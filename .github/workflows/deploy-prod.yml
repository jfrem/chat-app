name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Add SSH known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan ${{ secrets.PRODUCTION_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to production
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.PRODUCTION_HOST }} "cd ${{ secrets.PRODUCTION_PATH }} && git pull origin main"
        ssh ${{ secrets.SSH_USER }}@${{ secrets.PRODUCTION_HOST }} "cd ${{ secrets.PRODUCTION_PATH }} && docker-compose -f docker-compose.prod.yml down"
        ssh ${{ secrets.SSH_USER }}@${{ secrets.PRODUCTION_HOST }} "cd ${{ secrets.PRODUCTION_PATH }} && docker-compose -f docker-compose.prod.yml up -d --build"
        ssh ${{ secrets.SSH_USER }}@${{ secrets.PRODUCTION_HOST }} "cd ${{ secrets.PRODUCTION_PATH }} && docker-compose -f docker-compose.prod.yml exec -T php composer install --no-dev --optimize-autoloader"
        ssh ${{ secrets.SSH_USER }}@${{ secrets.PRODUCTION_HOST }} "cd ${{ secrets.PRODUCTION_PATH }} && docker-compose -f docker-compose.prod.yml exec -T php php artisan migrate --force"
        ssh ${{ secrets.SSH_USER }}@${{ secrets.PRODUCTION_HOST }} "cd ${{ secrets.PRODUCTION_PATH }} && docker-compose -f docker-compose.prod.yml exec -T php php artisan config:cache"
        ssh ${{ secrets.SSH_USER }}@${{ secrets.PRODUCTION_HOST }} "cd ${{ secrets.PRODUCTION_PATH }} && docker-compose -f docker-compose.prod.yml exec -T php php artisan route:cache"
        ssh ${{ secrets.SSH_USER }}@${{ secrets.PRODUCTION_HOST }} "cd ${{ secrets.PRODUCTION_PATH }} && docker-compose -f docker-compose.prod.yml exec -T php php artisan view:cache"
        
    - name: Notify on success
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: deployments
        SLACK_COLOR: good
        SLACK_TITLE: Production Deployment Successful
        SLACK_MESSAGE: 'The application has been successfully deployed to production üöÄ'
        
    - name: Notify on failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: deployments
        SLACK_COLOR: danger
        SLACK_TITLE: Production Deployment Failed
        SLACK_MESSAGE: 'The deployment to production has failed ‚ùå'