version: '3.8'

services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/conf.d/default.prod.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./frontend/build:/var/www/frontend
    depends_on:
      - php
      - frontend
    networks:
      - chat-network
    restart: unless-stopped

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile.prod
    volumes:
      - ./backend:/var/www/html
      - ./docker/php/php.prod.ini:/usr/local/etc/php/conf.d/php.ini
      - ./docker/php/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    depends_on:
      - mysql
      - redis
    networks:
      - chat-network
    restart: unless-stopped

  websockets:
    build:
      context: ./docker/websockets
      dockerfile: Dockerfile.prod
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - redis
      - php
    networks:
      - chat-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - chat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
      - ./docker/redis/redis.prod.conf:/usr/local/etc/redis/redis.conf
    networks:
      - chat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://chat.example.com/api
      - NEXT_PUBLIC_WEBSOCKET_HOST=chat.example.com
      - NEXT_PUBLIC_WEBSOCKET_PORT=443
      - NEXT_PUBLIC_WEBSOCKET_KEY=chat_app_key
    networks:
      - chat-network
    restart: unless-stopped

networks:
  chat-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data: